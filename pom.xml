<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.idontknow.business</groupId>
    <artifactId>api</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>api${project.version}</name>
    <description>Demo API project for Spring Boot</description>
    <modules>
        <module>idontknow-system</module>
        <module>idontknow-common</module>
        <module>idontknow-start</module>
        <module>idontknow-batch</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>21</java.version>
        <maven.compiler.release>${java.version}</maven.compiler.release>

        <!-- Database -->
        <mysql.version>8.3.0</mysql.version>
        <querydsl.version>5.1.0</querydsl.version>
        <flyway-database-mysql.version>10.18.2</flyway-database-mysql.version>
        <hypersistence-utils.version>3.8.2</hypersistence-utils.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>
        <spring-boot-maven-plugin.version>3.4.1</spring-boot-maven-plugin.version>
        <maven-surefire-plugin.version>3.5.2</maven-surefire-plugin.version>
        <maven-archetype-plugin.version>3.3.1</maven-archetype-plugin.version>
        <maven-checkstyle-plugin.version>3.6.0</maven-checkstyle-plugin.version>
        <spring-javaformat-maven-plugin.version>0.0.43</spring-javaformat-maven-plugin.version>

        <jacoco-maven-plugin.version>0.8.12</jacoco-maven-plugin.version>
        <!-- Logging -->
        <logstash.version>8.0</logstash.version>

        <!-- Telemetry -->
        <opentelemetry-api.version>1.40.0</opentelemetry-api.version>
        <pyroscope-agent.version>0.14.0</pyroscope-agent.version>

        <!-- Lombok & Mapstruct -->
        <projectlombok.version>1.18.34</projectlombok.version>
        <mapstruct.version>1.6.3</mapstruct.version>
        <lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>

        <!-- utilities -->
        <spring-cloud.version>2023.0.1</spring-cloud.version>
        <bucket4j-core.version>8.10.1</bucket4j-core.version>
        <slack-api-client.version>1.40.3</slack-api-client.version>
        <apache-commons-text.version>1.12.0</apache-commons-text.version>
        <apache-commons-collection.version>4.4</apache-commons-collection.version>
        <guava.version>33.3.1-jre</guava.version>
        <!-- Development-->
        <git-code-format-maven-plugin.version>5.3</git-code-format-maven-plugin.version>
        <jwt.version>0.12.6</jwt.version>
        <!-- Test -->
        <testcontainers.version>1.20.1</testcontainers.version>

    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${mapstruct.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct-processor</artifactId>
            <version>${mapstruct.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok-mapstruct-binding</artifactId>
            <version>${lombok-mapstruct-binding.version}</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
            <version>${projectlombok.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <!-- springdoc-openapi-starter-webmvc-ui -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>2.6.0</version>
        </dependency>
        <!-- QueryDSL APT 注解处理器 -->
        <dependency>
            <groupId>com.querydsl</groupId>
            <artifactId>querydsl-apt</artifactId>
            <version>${querydsl.version}</version>
            <scope>provided</scope>
            <optional>true</optional>
            <classifier>jakarta</classifier>
        </dependency>
        <!-- Testing libraries -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <!-- exclude junit 4 -->
            <exclusions>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-testcontainers</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>mysql</artifactId>
            <version>${testcontainers.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>rabbitmq</artifactId>
            <version>${testcontainers.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${testcontainers.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>3.4.1</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
        </dependencies>
    </dependencyManagement>


    <profiles>
        <!-- 开发环境 -->
        <profile>
            <id>dev</id>
            <properties>
                <PROFILE-ACTIVE>dev</PROFILE-ACTIVE>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <!-- 测试环境 -->
        <profile>
            <id>test</id>

            <properties>
                <PROFILE-ACTIVE>test</PROFILE-ACTIVE>
            </properties>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
        </profile>
        <!-- 正式环境 -->
        <profile>
            <id>prod</id>

            <properties>
                <PROFILE-ACTIVE>prod</PROFILE-ACTIVE>
            </properties>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
        </profile>
    </profiles>

    <build>
        <plugins>
            <!-- Integration tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>3.3.1</version>
            </plugin>

            <!-- Add SBOM specification for application security contexts and supply chain component analysis. -->
            <plugin>
                <groupId>org.cyclonedx</groupId>
                <artifactId>cyclonedx-maven-plugin</artifactId>
                <version>2.9.1</version>
            </plugin>
            <plugin>
                <groupId>io.spring.javaformat</groupId>
                <artifactId>spring-javaformat-maven-plugin</artifactId>
                <version>${spring-javaformat-maven-plugin.version}</version>
            </plugin>

            <!--<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven-checkstyle-plugin.version}</version>
                <configuration>
                    &lt;!&ndash; 配置文件路径 &ndash;&gt;
                    <configLocation>checkstyle/checkstyle.xml</configLocation>
                    &lt;!&ndash; true表示在命令行或控制台输出检查结果，否则结果不会直接在控制台显示 &ndash;&gt;
                    <consoleOutput>true</consoleOutput>
                    &lt;!&ndash; true表示检查到错误，则整个构建过程失败 &ndash;&gt;
                    <failsOnError>true</failsOnError>
                    &lt;!&ndash; 是否直接构造失败，true只要任何一个代码规范不通过，从而直接构建失败，false代码检查不通过，不会导致构建失败，但会报告违规情况 &ndash;&gt;
                    <failOnViolation>true</failOnViolation>
                    &lt;!&ndash; 是否包含测试代码目录，true包含，false不包含，只检查主目录代码 &ndash;&gt;
                    <includeTestSourceDirectory>true</includeTestSourceDirectory>
                    &lt;!&ndash; 是否跳过代码规范检查，true跳过，false不跳过 &ndash;&gt;
                    <skip>false</skip>
                    &lt;!&ndash; checkstyle报告是否包含代码引用链接，false不包含，true包含 &ndash;&gt;
                    <linkXRef>false</linkXRef>
                </configuration>
                <executions>
                    &lt;!&ndash; 执行mvn install启动代码规范扫描 &ndash;&gt;
                    <execution>
                        <id>install</id>
                        <phase>install</phase>
                        <goals>
                            <goal>checkstyle</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>-->
            <!-- 打包插件，将 Java 源代码编译为字节码（.class 文件） -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <compilerArgs>
                        <!-- 关闭对不推荐使用的编译器选项的警告 -->
                        <arg>-Xlint:-options</arg>
                        <!--  启用对可变参数使用的警告 -->
                        <arg>-Xlint:varargs</arg>
                        <!-- 启用对使用原始类型raw types的警告 -->
                        <arg>-Xlint:rawtypes</arg>
                        <!-- 启用对未检查的操作的警告，比如未检查的类型转换 -->
                        <arg>-Xlint:unchecked</arg>
                        <!-- 启用对使用过时 API 的警告 -->
                        <arg>-Xlint:deprecation</arg>
                        <!-- 在编译的字节码中保留方法参数的名称，这对反射或序列化框架非常有用 -->
                        <arg>-parameters</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-archetype-plugin</artifactId>
                <version>${maven-archetype-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <skip>false</skip>
                    <testFailureIgnore>true</testFailureIgnore>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin.version}</version>
                <configuration>
                    <skip>false</skip>
                    <destFile>${project.build.directory}/coverage-reports/jacoco-unit.exec</destFile>
                    <dataFile>${project.build.directory}/coverage-reports/jacoco-unit.exec</dataFile>
                </configuration>
                <executions>
                    <execution>
                        <id>pre-test</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>post-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- 避免font文件的二进制文件格式压缩破坏 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.3.1</version>
                <configuration>
                    <nonFilteredFileExtensions>
                        <nonFilteredFileExtension>woff</nonFilteredFileExtension>
                        <nonFilteredFileExtension>woff2</nonFilteredFileExtension>
                        <nonFilteredFileExtension>eot</nonFilteredFileExtension>
                        <nonFilteredFileExtension>ttf</nonFilteredFileExtension>
                        <nonFilteredFileExtension>svg</nonFilteredFileExtension>
                    </nonFilteredFileExtensions>
                </configuration>
            </plugin>

        </plugins>
        <!-- profile对资源的操作 -->
        <resources>
            <!-- 添加需要包含的文件 -->
            <resource>
                <directory>src/main/resources</directory>
                <!-- 是否替换yml或者properties里@xx@表示的maven properties属性值 -->
                <filtering>true</filtering>
                <!-- 在打包的时候，根据-P参数，加上需要的yml配置文件 -->
                <includes>
                    <include>application.yml</include>
                    <include>application-${PROFILE-ACTIVE}.yml</include>
                    <include>logback-spring.xml</include>
                    <include>redisson.yaml</include>
                    <include>spy.properties</include>
                    <include>**/*.xml</include>
                    <include>**/*.json</include>
                    <include>**/*.ftl</include>
                </includes>
            </resource>
        </resources>
    </build>

    <!-- (you don't need this if you are using a .RELEASE version) -->
    <repositories>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/snapshot</url>
            <releases>
                <enabled>false</enabled>
            </releases>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/snapshot</url>
            <releases>
                <enabled>false</enabled>
            </releases>
        </pluginRepository>
    </pluginRepositories>

</project>
